package api;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import params.PostUsers;

import java.util.List;
import java.util.NoSuchElementException;
import java.util.Optional;

import static org.springframework.web.bind.annotation.RequestMethod.DELETE;
import static org.springframework.web.bind.annotation.RequestMethod.GET;

@Controller
public class APIController {
    @Autowired // This means to get the bean called googleUserRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private GoogleUserRepository googleUserRepository;

    @Autowired
    private GoogleUserActivityRepository googleUserActivityRepository;

    /**
     * Endpoint for storing user's data and activities into DB.
     * @param postUsers instance of PostUsers, deserialized from JSON.
     */
    @PostMapping(path="/users")
    public @ResponseBody APIResponse storeUserDataActivity (@RequestBody PostUsers postUsers) {

        GooglePlusAPIWrapper gpa = new GooglePlusAPIWrapper(postUsers);
        GoogleUser googleUser;
        List<GoogleUserActivity> googleUserActivities;
        try {
            googleUser = gpa.getGoogleUser();
            googleUserActivities = gpa.getActivities(googleUser);
        } catch (Exception e) {
            return FactoryAPIResponse.createFailedResponse(e);
        }

        googleUserRepository.save(googleUser);
        googleUserActivityRepository.saveAll(googleUserActivities);

        return FactoryAPIResponse.createSuccessResponse();
    }


    /**
     * Endpoint which deletes the user data and his activities.
     * @param userGoogleId id of the user.
     */
    @RequestMapping(value = "/users/{userGoogleId}", method = DELETE)
    public @ResponseBody APIResponse deleteUserDataActivity(@PathVariable String userGoogleId){
        try {
            googleUserRepository.deleteById(userGoogleId);
        } catch(Exception e){
            return FactoryAPIResponse.createFailedResponse(e);
        }

        return FactoryAPIResponse.createSuccessResponse();
    }

    /**
     * Endpoint which returns the user data.
     * @param userGoogleId id of the user.
     */
    @RequestMapping(value = "/users/{userGoogleId}", method = GET)
    public @ResponseBody APIResponse getUserData(@PathVariable String userGoogleId){
        Optional<GoogleUser> optionalGoogleUser = googleUserRepository.findById(userGoogleId);
        GoogleUser googleUser = null;

        try {
            if(optionalGoogleUser.isPresent()){
                googleUser = optionalGoogleUser.get();
            }
        } catch(Exception e){
            return FactoryAPIResponse.createFailedResponse(e);
        }

        return FactoryAPIResponse.createSuccessResponse(googleUser);
    }

    /**
     * Endpoint which returns list of activities of the user.
     * TODO: (each with: URL on Google+, title, kind, numbers of replies, number of plusoners)
     * @param userGoogleId id of the user.
     */
    @RequestMapping(value = "/users/{userGoogleId}/activities", method = GET)
    public @ResponseBody APIResponse getUserActivities(@PathVariable String userGoogleId){
        List<GoogleUserActivity> googleUserActivities;

        try {
            googleUserActivities = googleUserActivityRepository.findByGoogleUserGoogleUserId(userGoogleId);
        } catch(Exception e){
            return FactoryAPIResponse.createFailedResponse(e);
        }

        return FactoryAPIResponse.createSuccessResponse(googleUserActivities);
    }
}